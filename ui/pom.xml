<!--
 
  Leibniz Bioactives Cloud
  Copyright 2020 Leibniz-Institut f. Pflanzenbiochemie
 
  Licensed under the Apache License, Version 2.0 (the "License");
  you may not use this file except in compliance with the License.
  You may obtain a copy of the License at
 
      http://www.apache.org/licenses/LICENSE-2.0
 
  Unless required by applicable law or agreed to in writing, software
  distributed under the License is distributed on an "AS IS" BASIS,
  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  See the License for the specific language governing permissions and
  limitations under the License.
 
-->

<project xmlns="http://maven.apache.org/POM/4.0.0"
         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0
 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>

    <groupId>de.ipb-halle</groupId>
    <artifactId>ui</artifactId>
    <version>2.0.2</version>
    <scm>
        <connection>scm:git:https://github.com/ipb-halle/CRIMSy.git</connection>
        <url>https://github.com/ipb-halle/CRIMSy.git</url>
    </scm>
    <packaging>war</packaging>

    <name>CRIMSy ui</name>
    <url>https://github.com/ipb-halle/CRIMSy</url>

    <organization>
        <name>Leibniz Inst. of Plant Biochemistry (IPB), Halle (Saale), Germany</name>
        <url>https://www.ipb-halle.de</url>
    </organization>

    <properties>
        <hibernate.version>5.3.20.Final</hibernate.version>
        <tomee.classifier>plus</tomee.classifier>
        <tomee.servlet-engine>7.0.81</tomee.servlet-engine>
        <servlet.version>3.1.0</servlet.version>
        
        <!-- Flag allowing one or more executions of the assembly plugin to be configured as skipped for a particular build.
        This makes the assembly plugin more controllable from profiles. -->
        <skip.assembly>true</skip.assembly>
    </properties>

    <!-- define (additional) repositories -->
    <repositories>
        <repository>
            <id>central</id>
            <url>https://repo.maven.apache.org/maven2/</url>
        </repository>
        <repository>
            <id>pentaho-releases</id>
            <!-- address no longer valid <url>http://repository.pentaho.org/artifactory/repo/</url> -->
            <url>https://nexus.pentaho.org/content/groups/omni</url>
        </repository>
        <repository>
            <id>primefaces themes</id>
            <url>https://repository.primefaces.org/</url>
        </repository>
    </repositories>

    <!-- JavaDoc -->
    <reporting>
        <plugins>
            <plugin>
                <artifactId>maven-project-info-reports-plugin</artifactId>
                <version>2.9</version>
                <configuration>
                    <dependencyLocationsEnabled>false</dependencyLocationsEnabled>
                </configuration>
            </plugin>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-javadoc-plugin</artifactId>
                <version>2.10.4</version>
                <configuration>
                    <author>CRIMSy development team</author>
                    <encoding>UTF-8</encoding>
                    <nohelp>true</nohelp>
                    <show>private</show>
                </configuration>
            </plugin>
            <plugin>
                <groupId>org.codehaus.mojo</groupId>
                <artifactId>cobertura-maven-plugin</artifactId>
                <version>2.7</version>
                <configuration>
                    <quiet>true</quiet>
                    <cobertura.maxmem>1024m</cobertura.maxmem>
                    <instrumentation>
                        <maxmem>1024m</maxmem>
                    </instrumentation>
                    <argLine>-Xms1024m -Xmx4096m -XX:MaxPermSize=4096m</argLine>
                    <!-- <argLine>-Xmx2048m</argLine> -->
                </configuration>
            </plugin>
        </plugins>
    </reporting>


    <build>
        <plugins>
            <!-- Compile for java 8, printing all compile warnings.
            No annotation processing -->
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-compiler-plugin</artifactId>
                <version>3.1</version>
                <configuration>
                    <source>1.8</source>
                    <target>1.8</target>
                    <compilerArgs>
                        <arg>-Xlint:all</arg>
                        <arg>-proc:none</arg>
                    </compilerArgs>
                    <encoding>UTF-8</encoding>
                </configuration>
            </plugin>
            
            <!-- 2020-10-02: surefire plugin included explicitly to downgrade -->
            <!-- from version 2.12.4 to 2.12 to fix cobertura code coverage -->
            <!-- https://stackoverflow.com/questions/41244589/cobertura-error-reading-file-cobertura-ser-null-java-io-eofexception-null -->
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-surefire-plugin</artifactId>
                <version>2.12</version>
                <dependencies>
                    <dependency>
                        <groupId>org.apache.maven.surefire</groupId>
                        <artifactId>surefire-junit47</artifactId>
                        <version>2.17</version>
                    </dependency>
                </dependencies>             
                <configuration>                     
                    <groups>${testcase.include}</groups>
                    <excludedGroups>${testcase.exclude}</excludedGroups>
                </configuration>
            </plugin>
           
            <!-- A maven plugin to process annotation for jdk6 at compile time -->
            <plugin>
                <groupId>org.bsc.maven</groupId>
                <artifactId>maven-processor-plugin</artifactId>
                <version>2.0.5</version>
                <executions>
                    <execution>
                        <id>process</id>
                        <goals>
                            <goal>process</goal>
                        </goals>
                        <phase>generate-sources</phase>
                        <configuration>
                            <processors>
                                <processor>org.hibernate.jpamodelgen.JPAMetaModelEntityProcessor</processor>
                            </processors>
                        </configuration>
                    </execution>
                </executions>
                <dependencies>
                    <dependency>
                        <groupId>org.hibernate</groupId>
                        <artifactId>hibernate-jpamodelgen</artifactId>
                        <version>${hibernate.version}</version>
                    </dependency>
                </dependencies>
            </plugin>

            <!-- javacc compilation -->
            <plugin>
                <groupId>org.codehaus.mojo</groupId>
                <artifactId>javacc-maven-plugin</artifactId>
                <version>2.6</version>
                <executions>
                    <execution>
                        <goals>
                            <goal>javacc</goal>
                        </goals>
                    </execution>
                </executions>
                <dependencies>
                    <dependency>
                        <groupId>net.java.dev.javacc</groupId>
                        <artifactId>javacc</artifactId>
                        <version>6.1.2</version>
                    </dependency>
                </dependencies>
            </plugin>

            <!-- automatic build number -->
            <plugin>
                <groupId>org.codehaus.mojo</groupId>
                <artifactId>buildnumber-maven-plugin</artifactId>
                <version>1.4</version>
                <executions>
                    <execution>
                        <phase>validate</phase>
                        <goals>
                            <goal>create</goal>
                        </goals>
                    </execution>
                </executions>
                <configuration>
                    <doCheck>true</doCheck>
                    <doUpdate>true</doUpdate>
                    <shortRevisionLength>8</shortRevisionLength>

                    <format>{0} CRIMSy-Master (git-sha1:{2} * {1,date,yyyy-MM-dd HH:mm:ss})</format>
                    <items>
                        <item >${project.version}</item>
                        <item>timestamp</item>
                        <item>scmVersion</item>
                    </items>

                </configuration>
            </plugin>

            <!-- web application packaging -->
            
            <plugin>
                <artifactId>maven-war-plugin</artifactId>
                <version>2.4</version>
                <configuration>
                    <warSourceDirectory>web</warSourceDirectory>
                    <failOnMissingWebXml>true</failOnMissingWebXml>
                    <warName>ui</warName>
                    <archive>
                        <manifest>
                            <addDefaultImplementationEntries>true</addDefaultImplementationEntries>
                        </manifest>
                        <manifestEntries>
                            <Implementation-Build>${buildNumber}</Implementation-Build>
                        </manifestEntries>
                    </archive>
                </configuration>
            </plugin>
           
            <!-- Converts files with characters in any supported character 
            encoding to one with ASCII and/or Unicode escapes.  -->
            <plugin>
                <artifactId>native2ascii-maven-plugin</artifactId>
                <groupId>org.codehaus.mojo</groupId>
                <version>1.0-beta-1</version>
                <executions>
                    <execution>
                        <id>native2ascii-utf8-resources</id>
                        <phase>process-classes</phase>
                        <goals>
                            <goal>native2ascii</goal>
                        </goals>
                        <configuration>
                            <encoding>UTF8</encoding>
                            <!-- use default settings for workDir and tempDir -->
                            <includes>
                                <include>**/messages_*.properties</include>
                            </includes>
                        </configuration>
                    </execution>
                </executions>
            </plugin>
        </plugins>
    </build>



    <dependencies>

        <!-- crimsy-agency-api -->
        <dependency>
            <groupId>de.ipb-halle</groupId>
            <artifactId>crimsy-agency-api</artifactId>
            <version>1.0</version>
        </dependency>

        <!-- OWASP java HTML sanitizer -->
        <dependency>
            <groupId>com.googlecode.owasp-java-html-sanitizer</groupId>
            <artifactId>owasp-java-html-sanitizer</artifactId>
            <version>20200713.1</version>
        </dependency>

        <!-- barcoding: Google ZXing -->
        <dependency>
            <groupId>com.google.zxing</groupId>
            <artifactId>core</artifactId>
            <version>3.4.0</version>
        </dependency>

        <!-- Provided dependencies by the server -->
        <!-- APIs for CDI (Contexts and Dependency Injection for Java)-->
        <dependency>
            <groupId>javax.enterprise</groupId>
            <artifactId>cdi-api</artifactId>
            <version>2.0</version>
            <scope>provided</scope>
        </dependency>
        
        <!-- Apache MyFaces JSF -->
        <!-- Mojarra 2.2.12 had issues with nested ui:repeat elements -->
        <dependency>
            <groupId>org.apache.myfaces.core</groupId>
            <artifactId>myfaces-api</artifactId>
            <version>2.2.12</version>
            <scope>provided</scope>
        </dependency>
        
        <!-- tomee JAX-RS -->
        <dependency>
            <groupId>org.apache.tomee</groupId>
            <artifactId>tomee-jaxrs</artifactId>
            <version>7.0.5</version>
            <scope>provided</scope>
        </dependency>

        <!-- Servlet API for DepictServlet -->
        <dependency>
            <groupId>javax.servlet</groupId>
            <artifactId>javax.servlet-api</artifactId>
            <version>3.1.0</version>
            <scope>provided</scope>
        </dependency>
        
        <!-- Annotation Processor to generate JPA 2 static metamodel classes -->
        <dependency>
            <groupId>org.hibernate</groupId>
            <artifactId>hibernate-jpamodelgen</artifactId>
            <version>${hibernate.version}</version>
            <scope>provided</scope>
        </dependency>
        
        <!-- Dependencies needed at compile time -->
        <!-- JavaMail API (compat) -->
        <dependency>
            <groupId>javax.mail</groupId>
            <artifactId>mail</artifactId>
            <version>1.4</version>
        </dependency>
        
        <!-- Ui Library for jsf-->
        <dependency>
            <groupId>net.bootsfaces</groupId>
            <artifactId>bootsfaces</artifactId>
            <version>1.4.2</version>
            <scope>compile</scope>
        </dependency>
        
        <!-- RTF ParserKit -->
        <dependency>
            <groupId>com.github.joniles</groupId>
            <artifactId>rtfparserkit</artifactId>
            <version>1.15.0</version>
        </dependency>

        <!-- CDK -->
        <dependency>
            <groupId>org.openscience.cdk</groupId>
            <artifactId>cdk-core</artifactId>
            <version>2.3</version>
        </dependency>

        <dependency>
            <groupId>org.openscience.cdk</groupId>
            <artifactId>cdk-ctab</artifactId>
            <version>2.3</version>
        </dependency>

        <dependency>
            <groupId>org.openscience.cdk</groupId>
            <artifactId>cdk-data</artifactId>
            <version>2.3</version>
        </dependency>

        <dependency>
            <groupId>org.openscience.cdk</groupId>
            <artifactId>cdk-formula</artifactId>
            <version>2.3</version>
        </dependency>
        
        <dependency>
            <groupId>org.openscience.cdk</groupId>
            <artifactId>cdk-smiles</artifactId>
            <version>2.3</version>
        </dependency>

        <dependency>
            <groupId>org.openscience.cdk</groupId>
            <artifactId>cdk-interfaces</artifactId>
            <version>2.3</version>
        </dependency>

        <dependency>
            <groupId>org.openscience.cdk</groupId>
            <artifactId>cdk-io</artifactId>
            <version>2.3</version>
        </dependency>

        <dependency>
            <groupId>org.openscience.cdk</groupId>
            <artifactId>cdk-valencycheck</artifactId>
            <version>2.3</version>
        </dependency>


        <!-- PrimeFaces Ui Library for jsf-->
        <dependency>
            <groupId>org.primefaces</groupId>
            <artifactId>primefaces</artifactId>
            <version>6.2</version>
        </dependency>

        <!-- PrimeFaces FontAwesome 5.x -->
        <dependency>
            <groupId>org.webjars</groupId>
            <artifactId>font-awesome</artifactId>
            <version>5.12.0</version>
        </dependency>
        
        <!-- PrimeFaces Bootstrap Theme. Has its own repository -->
        <dependency>
            <groupId>org.primefaces.themes</groupId>
            <artifactId>bootstrap</artifactId>
            <version>1.0.10</version>
        </dependency>
        
        <!-- Ui Library for jsf-->
        <dependency>
            <groupId>org.omnifaces</groupId>
            <artifactId>omnifaces</artifactId>
            <version>2.6.4</version>
        </dependency>
        
        <!-- Integration for using Ehcache 2.x as a 
        Hibernate second-level-cache provider  -->
        <dependency>
            <groupId>org.hibernate</groupId>
            <artifactId>hibernate-ehcache</artifactId>
            <version>${hibernate.version}</version>
            <scope>provided</scope>
        </dependency>

        <!-- hibernate stuff -->
        <dependency>
            <groupId>org.hibernate</groupId>
            <artifactId>hibernate-core</artifactId>
            <version>${hibernate.version}</version>
            <scope>provided</scope>
        </dependency>

        <!-- Hibernate Validator Engine Relocation Artifact -->
        <dependency>
            <groupId>org.hibernate</groupId>
            <artifactId>hibernate-validator</artifactId>
            <version>5.3.6.Final</version>
            <scope>provided</scope>
        </dependency>

        <!-- jpa2.2 - replacement for jpa2.1 -->
        <dependency>
            <groupId>javax.persistence</groupId>
            <artifactId>javax.persistence-api</artifactId>
            <version>2.2</version>
            <scope>provided</scope>
        </dependency>
        
        <!-- org.postgresql/postgresql JDBC 4.2 -->
        <dependency>
            <groupId>org.postgresql</groupId>
            <artifactId>postgresql</artifactId>
            <version>42.2.16</version>
        </dependency>
        
        <!--hibernate support for postgres json, jsonb field types -->
        <dependency>
            <groupId>com.vladmihalcea</groupId>
            <artifactId>hibernate-types-52</artifactId>
            <version>2.10.4</version>
        </dependency>

        <!-- SolrJ -->
        <dependency>
            <groupId>org.apache.solr</groupId>
            <artifactId>solr-solrj</artifactId>
            <version>6.2.1</version>
        </dependency>

        <!-- Reference implementation of JSON encoders/decoders -->
        <dependency>
            <groupId>com.google.code.gson</groupId>
            <artifactId>gson</artifactId>
            <version>2.8.6</version>
        </dependency>
        
        <!-- tomee javaEE api-->
        <dependency>
            <groupId>org.apache.tomee</groupId>
            <artifactId>javaee-api</artifactId>
            <version>7.0-1</version>
        </dependency>

        <!-- Logging: log4j 2 -->
        <dependency>
            <groupId>org.apache.logging.log4j</groupId>
            <artifactId>log4j-api</artifactId>
            <version>2.13.2</version>
        </dependency>

        <dependency>
            <groupId>org.apache.logging.log4j</groupId>
            <artifactId>log4j-core</artifactId>
            <version>2.13.2</version>
        </dependency>


        <!-- Dependencies for testing -->
        <!-- unit testing -->
        <dependency>
            <groupId>junit</groupId>
            <artifactId>junit</artifactId>
            <version>4.13.1</version>
            <scope>test</scope>
        </dependency>

        <!-- in memory db for testing -->
        <dependency>
            <groupId>com.h2database</groupId>
            <artifactId>h2</artifactId>
            <version>1.4.200</version>
            <scope>test</scope>
        </dependency>

        <!-- Arquillian -->
        <dependency>
            <groupId>org.jboss.arquillian.junit</groupId>
            <artifactId>arquillian-junit-container</artifactId>
            <version>1.6.0.Final</version>
            <scope>test</scope>
        </dependency>

        <!-- creating virtual wars -->
        <dependency>
            <groupId>org.jboss.shrinkwrap</groupId>
            <artifactId>shrinkwrap-depchain</artifactId>
            <version>1.2.6</version>
            <type>pom</type>
            <scope>test</scope> 
        </dependency>
        
        <!-- tomee for arquillian -->
        <dependency>
            <groupId>org.apache.tomee</groupId>
            <artifactId>arquillian-openejb-embedded</artifactId>
            <version>7.0.5</version>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.awaitility</groupId>
            <artifactId>awaitility</artifactId>
            <version>4.0.3</version>
            <scope>test</scope>
        </dependency>
        <!-- Needed for shrinkwrap -->
        <dependency>
            <groupId>org.seleniumhq.selenium</groupId>
            <artifactId>selenium-java</artifactId>
            <scope>test</scope>
            <version>2.44.0</version>
        </dependency>
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot</artifactId>
            <version>1.2.4.RELEASE</version>
        </dependency>
        <dependency>
            <groupId>de.ipb_halle</groupId>
            <artifactId>tx</artifactId>
            <version>1.0</version>
        </dependency>

        <!-- MolecularFaces -->
        <dependency>
            <groupId>de.ipb-halle</groupId>
            <artifactId>molecularfaces</artifactId>
            <version>0.3.0</version>
        </dependency>

        <!-- The OWASP JSON sanitizer is used by the
             JsonSanitizingConverter class for sanitizing
             user input data. -->
        <dependency>
            <groupId>com.mikesamuel</groupId>
            <artifactId>json-sanitizer</artifactId>
            <version>1.2.2</version>
        </dependency>

        <!-- PrettyTime is used in conversion of date and time.
             This offers the JSF converter 'prettyTimeConverter'. -->
        <dependency>
            <groupId>org.ocpsoft.prettytime</groupId>
            <artifactId>prettytime-integration-jsf</artifactId>
            <version>5.0.0.Final</version>
        </dependency>
    </dependencies>
</project> 
