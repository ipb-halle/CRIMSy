<!--
 
  Leibniz Bioactives Cloud
  Copyright 2017 Leibniz-Institut f. Pflanzenbiochemie
 
  Licensed under the Apache License, Version 2.0 (the "License");
  you may not use this file except in compliance with the License.
  You may obtain a copy of the License at
 
      http://www.apache.org/licenses/LICENSE-2.0
 
  Unless required by applicable law or agreed to in writing, software
  distributed under the License is distributed on an "AS IS" BASIS,
  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  See the License for the specific language governing permissions and
  limitations under the License.
 
-->
<project xmlns="http://maven.apache.org/POM/4.0.0"
         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0
 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>
 
    <groupId>de.ipb-halle</groupId>
    <artifactId>crimsy-job-storage</artifactId>
    <version>1.0</version>
    <packaging>jar</packaging>
 
    <name>CRIMSy Job DB Storage</name>
    <url>http://github.com/ipb-halle/CRIMSy</url>
 
    <properties>
        <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
        <hibernate.version>5.3.26.Final</hibernate.version>
        <!-- check Maven Central for latest versions! -->
    </properties>

    <!-- define (additional) repositories -->
    <repositories>
        <repository>
            <id>central</id>
            <url>https://repo.maven.apache.org/maven2/</url>
        </repository>
        <repository>
            <id>sonatype public</id>
            <url>https://oss.sonatype.org/content/groups/public/</url>
        </repository>
    </repositories>

 
    <build>
        <plugins>

            <!-- compile plugin -->
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-compiler-plugin</artifactId>
                <version>3.1</version>
                <configuration>
                    <source>17</source>
                    <target>17</target>
                    <compilerArgument>-Xlint:all</compilerArgument>
                    <encoding>${project.build.sourceEncoding}</encoding>
                </configuration>
            </plugin>

            <!-- explicit surefire plugin needed -->
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-surefire-plugin</artifactId>
                <version>2.22.2</version>
                <configuration>
                    <runOrder>random</runOrder>
                    <forkedProcessExitTimeoutInSeconds>240</forkedProcessExitTimeoutInSeconds>
                </configuration>
                <dependencies>
                    <dependency>
                        <groupId>org.junit.platform</groupId>
                        <artifactId>junit-platform-surefire-provider</artifactId>
                        <version>1.2.0-M1</version>
                    </dependency>
                    <dependency>
                        <groupId>org.junit.jupiter</groupId>
                        <artifactId>junit-jupiter-engine</artifactId>
                        <version>5.2.0-M1</version>
                    </dependency>
                </dependencies>
            </plugin>
            
            <!-- assembly plugin -->
            <plugin>
                <artifactId>maven-assembly-plugin</artifactId>
                <version>2.6</version>
                <configuration>
                    <descriptorRefs>
                        <descriptorRef>jar-with-dependencies</descriptorRef> 
                    </descriptorRefs>
                    <archive>
                        <manifest>
                        </manifest>
                    </archive>
                </configuration>

                <executions>
                    <execution>
                        <id>make-assembly</id>
                        <phase>package</phase>
                        <goals>
                            <goal>single</goal>
                        </goals>
                    </execution>
                </executions>
            </plugin>

        </plugins>
    </build>

    <dependencies>
        <dependency>
            <groupId>de.ipb-halle</groupId>
            <artifactId>crimsy-job-api</artifactId>
            <version>1.0</version>
        </dependency>

        <dependency>
            <groupId>de.ipb-halle</groupId>
            <artifactId>crimsy-test</artifactId>
            <version>1.0.0</version>
            <scope>test</scope>
        </dependency>
                
        <dependency>
            <groupId>de.ipb-halle</groupId>
            <artifactId>crimsy-api</artifactId>
            <version>1.0.0</version>
        </dependency>

        <!-- Provided dependencies by the server -->
        <!-- APIs for CDI (Contexts and Dependency Injection for Java)-->
        <dependency>
            <groupId>jakarta.enterprise</groupId>
            <artifactId>jakarta.enterprise.cdi-api</artifactId>
            <version>3.0.0</version>
            <scope>provided</scope>
        </dependency>
        
        <!-- tomee JAX-RS -->
        <dependency>
            <groupId>org.apache.tomee</groupId>
            <artifactId>tomee-jaxrs</artifactId>
            <version>9.0.0</version>
            <scope>provided</scope>
        </dependency>

        <!-- Servlet API for DepictServlet -->
        <dependency>
            <groupId>jakarta.servlet</groupId>
            <artifactId>jakarta.servlet-api</artifactId>
            <version>4.0.4</version>
            <scope>provided</scope>
        </dependency>
        
        <!-- Annotation Processor to generate JPA 2 static metamodel classes -->
        <dependency>
            <groupId>org.hibernate</groupId>
            <artifactId>hibernate-jpamodelgen</artifactId>
            <version>6.1.7.Final</version>
            <scope>provided</scope>
        </dependency>
        
        <!-- hibernate stuff -->
        <dependency>
            <groupId>org.hibernate</groupId>
            <artifactId>hibernate-core</artifactId>
            <version>6.1.7.Final</version>
            <scope>provided</scope>
        </dependency>

        
        <!-- https://mvnrepository.com/artifact/org.hibernate/hibernate-validator -->
        <dependency>
            <groupId>org.hibernate.validator</groupId>
            <artifactId>hibernate-validator</artifactId>
            <version>8.0.0.Final</version>
            <scope>provided</scope>
        </dependency>



        <!-- jpa3.1 -->
        <dependency>
            <groupId>jakarta.persistence</groupId>
            <artifactId>jakarta.persistence-api</artifactId>
            <version>3.1.0</version>
            <scope>provided</scope>
        </dependency>
        
        <!-- org.postgresql/postgresql JDBC 4.2 -->
        <dependency>
            <groupId>org.postgresql</groupId>
            <artifactId>postgresql</artifactId>
            <version>42.6.0</version>
            <scope>provided</scope>
        </dependency>
        
        <!--hibernate support for postgres json, jsonb field types -->
        <dependency>
            <groupId>com.vladmihalcea</groupId>
            <artifactId>hibernate-types-60</artifactId>
            <version>2.21.1</version>
        </dependency>

        <dependency>
            <groupId>com.fasterxml.jackson.core</groupId>
            <artifactId>jackson-databind</artifactId>
            <version>2.14.0-rc1</version>
        </dependency>

        <!-- tomee javaEE api-->
        <dependency>
            <groupId>org.apache.tomee</groupId>
            <artifactId>javaee-api</artifactId>
            <version>8.0-6</version>
        </dependency>

        <!-- Logging: log4j 2 -->
        <dependency>
            <groupId>org.apache.logging.log4j</groupId>
            <artifactId>log4j-core</artifactId>
            <version>2.19.0</version>
        </dependency>


        <!-- Dependencies for testing -->
        <!-- unit testing -->
        <dependency>
            <groupId>org.junit.jupiter</groupId>
            <artifactId>junit-jupiter</artifactId>
            <version>5.9.1</version>
            <scope>test</scope>
        </dependency>
        <!-- keeps old JUnit4 tests functional -->
        <dependency>
            <groupId>org.junit.vintage</groupId>
            <artifactId>junit-vintage-engine</artifactId>
            <version>5.8.2</version>
            <scope>test</scope>
        </dependency>

        <!-- db for testing -->
        <dependency>
            <groupId>org.testcontainers</groupId>
            <artifactId>testcontainers</artifactId>
            <version>1.16.3</version>
            <scope>test</scope>
        </dependency>
        
        <dependency>
            <groupId>org.testcontainers</groupId>
            <artifactId>postgresql</artifactId>
            <version>1.16.3</version>
            <scope>test</scope>
        </dependency>

        <!-- Arquillian -->
        <!-- There seems to be a bug in Arquillian resulting in no execution of 
        @BeforeEach and @AfterEach in our tests. This is known 
        (https://github.com/arquillian/arquillian-core/issues/309).
        1.7.0.Alpha6 is the last version where this works (tested until 
        1.7.0.Alpha14).-->
        <dependency>
            <groupId>org.jboss.arquillian.junit5</groupId>
            <artifactId>arquillian-junit5-container</artifactId>
            <version>1.7.0.Alpha6</version>
            <scope>test</scope>
        </dependency>

        <!-- creating virtual wars -->
        <dependency>
            <groupId>org.jboss.shrinkwrap</groupId>
            <artifactId>shrinkwrap-depchain</artifactId>
            <version>2.0.0-beta-1</version>
            <type>pom</type>
            <scope>test</scope> 
        </dependency>
        
        <!-- tomee for arquillian -->
        <dependency>
            <groupId>org.apache.tomee</groupId>
            <artifactId>arquillian-openejb-embedded</artifactId>
            <version>9.0.0</version>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.awaitility</groupId>
            <artifactId>awaitility</artifactId>
            <version>4.2.0</version>
            <scope>test</scope>
        </dependency>
        <!-- Needed for shrinkwrap -->
        <dependency>
            <groupId>org.seleniumhq.selenium</groupId>
            <artifactId>selenium-java</artifactId>
            <scope>test</scope>
            <version>2.44.0</version>
            <exclusions>
                <exclusion>
                    <groupId>commons-io</groupId>
                    <artifactId>commons-io</artifactId>
                </exclusion>
            </exclusions>
        </dependency>

        <!-- Expression Language implementation (required by bean validation) -->
        <dependency>
            <groupId>org.glassfish</groupId>
            <artifactId>jakarta.el</artifactId>
            <version>4.0.2</version>
            <scope>test</scope>
        </dependency>

       
        <dependency>
            <groupId>org.testng</groupId>
            <artifactId>testng</artifactId>
            <version>6.8.1</version>
        </dependency>



       
    </dependencies>
</project>
